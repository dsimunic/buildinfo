CC = gcc
CFLAGS = -Wall -Wextra -Werror -std=c99 -O2

# Directories
SRCDIR = src
BUILDDIR = build
BINDIR = bin

# Files
SOURCES = $(SRCDIR)/main.c
BUILDINFO_SRC = $(BUILDDIR)/buildinfo.c
OBJECTS = $(BUILDDIR)/main.o $(BUILDDIR)/buildinfo.o
TARGET = $(BINDIR)/myapp
VERSION_FILE = VERSION

# Include buildinfo.mk for version generation
include buildinfo.mk

.PHONY: all clean

all: $(TARGET)

# Generate buildinfo.c before compiling
$(BUILDINFO_SRC): buildinfo.mk $(VERSION_FILE)
	$(MAKE) -f buildinfo.mk generate-buildinfo \
		BUILDDIR=$(BUILDDIR) \
		VERSION_FILE=$(VERSION_FILE) \
		CC=$(CC)

# Build buildinfo object
$(BUILDDIR)/buildinfo.o: $(BUILDINFO_SRC)
	$(CC) $(CFLAGS) -c $< -o $@

# Build main object
$(BUILDDIR)/main.o: $(SRCDIR)/main.c $(SRCDIR)/buildinfo.h | $(BUILDDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Link final binary
$(TARGET): $(OBJECTS) | $(BINDIR)
	$(CC) $(OBJECTS) -o $@

# Create directories
$(BUILDDIR):
	mkdir -p $(BUILDDIR)

$(BINDIR):
	mkdir -p $(BINDIR)

clean:
	rm -rf $(BUILDDIR) $(BINDIR)

# Print current version
.PHONY: version
version:
	@$(MAKE) -f buildinfo.mk print-version
